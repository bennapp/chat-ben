server {
  listen 443 ssl;
  server_name          chatben.co;
  ssl_certificate      /ssl/www.chatben.co.crt;
  ssl_certificate_key  /ssl/www.chatben.co.key;

  return 301 https://www.chatben.co$request_uri;
}

server {
  server_name          chatben.co;
  listen               *:80;
  listen               [::]:80;

  return 301 https://www.chatben.co$request_uri;
}

server {
  server_name          www.chatben.co;
  listen               *:80;
  listen               [::]:80;

  return 301 https://www.chatben.co$request_uri;
}

upstream app {
  server 127.0.0.1:3000;
}

server {
  listen 443 ssl;
  server_name www.chatben.co;

  root /home/dev/workspace/convo/public;
  try_files $uri/index.html $uri @app;

  location @app {
    # http://jordanhollinger.com/2011/12/19/deploying-with-thin/
    # Define what a "failure" is, so it can try the next server
    proxy_next_upstream error timeout http_502 http_503;

    # If the upstream server doesn't respond within n seconds, timeout
    proxy_read_timeout 60s;

    proxy_pass http://app;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-FORWARDED-PROTO $scheme;
    proxy_redirect off;
  }

  location /websocket {
    proxy_pass http://app/websocket;
    proxy_http_version 1.1;
    proxy_set_header  X-Real-IP  $remote_addr;
    add_header Access-Control-Allow-Origin *;
    try_files /system/maintenance.html $uri $uri/index.html $uri.html @websocket;
    proxy_set_header Upgrade websocket;
    proxy_set_header Connection Upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;

  ssl on;
  ssl_certificate /ssl/www.chatben.co.crt;
  ssl_certificate_key /ssl/www.chatben.co.key;

  ssl_session_timeout 5m;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
  ssl_prefer_server_ciphers on;
}